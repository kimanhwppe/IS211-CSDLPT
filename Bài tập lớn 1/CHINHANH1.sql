--------------------------------------------------
----  Note: Use user sys to run this script   ----
--------------------------------------------------

alter session set "_ORACLE_SCRIPT"=true;

------------------- Create user 
CREATE USER CHINHANH1 IDENTIFIED BY CHINHANH1;
GRANT CONNECT, RESOURCE, CREATE PUBLIC DATABASE LINK, DBA TO CHINHANH1;
GRANT UNLIMITED TABLESPACE TO CHINHANH1;

------------------- Create table
CREATE TABLE CHINHANH1.BRANCHES(
    BRANCH_ID VARCHAR2(10) PRIMARY KEY,
    BRANCH_NAME VARCHAR2(50) NOT NULL,
    BRANCH_ADDRESS VARCHAR2(200) NOT NULL
);

CREATE TABLE CHINHANH1.PRODUCTS(
    PRODUCT_ID VARCHAR2(10) PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(50) NOT NULL,
    PRODUCT_PRICE NUMBER NOT NULL, 
    PRODUCT_DESCRIPTION VARCHAR2(200) NOT NULL,
    PRODUCT_TYPE VARCHAR2(50) NOT NULL,
    warranty_period NUMBER NOT NULL --SỐ tháng hạn bảo hành
);

CREATE TABLE CHINHANH1.CUSTOMERS(
    CUS_ID VARCHAR2(10) PRIMARY KEY,
    CUS_NAME VARCHAR2(50) NOT NULL,
    CUS_PHONE VARCHAR2(50) NOT NULL,
    CUS_GENDER VARCHAR2(10) NOT NULL,
    CUS_ADDRESS VARCHAR2(200) NOT NULL,
    BRANCH_ID VARCHAR2(10) NOT NULL,
    CONSTRAINT FK_BRANCH_ID_CUS FOREIGN KEY (BRANCH_ID) REFERENCES  CHINHANH1.BRANCHES(BRANCH_ID)
);

CREATE TABLE  CHINHANH1.EMPLOYEES(
    EMP_ID VARCHAR2(10) PRIMARY KEY,
    EMP_NAME VARCHAR2(50) NOT NULL,
    EMP_PHONE VARCHAR2(50) NOT NULL,
    EMP_DOB DATE NOT NULL, --date of birth
    EMP_GENDER VARCHAR2(10) NOT NULL,
    EMP_ADDRESS VARCHAR2(200) NOT NULL,
    EMP_SALARY NUMBER NOT NULL,
    BRANCH_ID VARCHAR2(10) NOT NULL,
    CONSTRAINT FK_BRANCH_ID_EMP FOREIGN KEY (BRANCH_ID) REFERENCES  CHINHANH1.BRANCHES(BRANCH_ID)
);

CREATE TABLE  CHINHANH1.ORDERS(
    ORDER_ID NUMBER PRIMARY KEY,
    CUS_ID VARCHAR2(10) NOT NULL,
    ORDER_DATE DATE NOT NULL,
    BRANCH_ID VARCHAR2(10) NOT NULL,
    EMPLOYEE_ID VARCHAR2(10) NOT NULL,
    TOTAL_PRICE NUMBER NOT NULL,
    CONSTRAINT FK_CUS_ID_ORDER FOREIGN KEY (CUS_ID) REFERENCES  CHINHANH1.CUSTOMERS(CUS_ID),
    CONSTRAINT FK_BRANCH_ID_ORDER FOREIGN KEY (BRANCH_ID) REFERENCES  CHINHANH1.BRANCHES(BRANCH_ID),
    CONSTRAINT FK_EMPLOYEE_ID_ORDER FOREIGN KEY (EMPLOYEE_ID) REFERENCES  CHINHANH1.EMPLOYEES(EMP_ID)
);

CREATE TABLE  CHINHANH1.ORDER_DETAILS(
    ORDER_ID NUMBER NOT NULL,
    PRODUCT_ID VARCHAR2(10) NOT NULL,
    QUANTITY NUMBER NOT NULL,
    PRICE NUMBER NOT NULL,
    CONSTRAINT FK_ORDER_ID_ORDERDETAIL FOREIGN KEY (ORDER_ID) REFERENCES  CHINHANH1.ORDERS(ORDER_ID),
    CONSTRAINT FK_PRODUCT_ID_ORDERDETAIL FOREIGN KEY (PRODUCT_ID) REFERENCES  CHINHANH1.PRODUCTS(PRODUCT_ID)
);

CREATE TABLE  CHINHANH1.WAREHOUSE_MANAGER(
    BRANCH_ID VARCHAR2(10) NOT NULL,
    PRODUCT_ID VARCHAR2(10) NOT NULL,
    DATE_UPDATE DATE NOT NULL,
    QUANTITY NUMBER NOT NULL,
    ManufactureDate date NOT NULL,
    CONSTRAINT PK_WAREHOUSE_MAN PRIMARY KEY (BRANCH_ID, PRODUCT_ID, DATE_UPDATE),
    CONSTRAINT FK_BRANCH_ID_MAN FOREIGN KEY (BRANCH_ID) REFERENCES  CHINHANH1.BRANCHES(BRANCH_ID),
    CONSTRAINT FK_PRODUCT_ID_MAN FOREIGN KEY (PRODUCT_ID) REFERENCES  CHINHANH1.PRODUCTS(PRODUCT_ID)
);

CREATE TABLE  CHINHANH1.WAREHOUSE_SALER(
    BRANCH_ID VARCHAR2(10) NOT NULL,
    PRODUCT_ID VARCHAR2(10) NOT NULL,
    PRODUCT_STATUS NUMBER NOT NULL, -- 1 là còn hàng, 0 là hết hàng
    CONSTRAINT FK_BRANCH_ID_SALE FOREIGN KEY (BRANCH_ID) REFERENCES  CHINHANH1.BRANCHES(BRANCH_ID),
    CONSTRAINT FK_PRODUCT_ID_SALE FOREIGN KEY (PRODUCT_ID) REFERENCES  CHINHANH1.PRODUCTS(PRODUCT_ID)
);


------------------- Trigger
-- Tạo trigger tự động thêm dữ liệu vào bảng WAREHOUSE_SALER khi có dữ liệu thêm vào bảng CHINHANH1.WAREHOUSE_MANAGER
CREATE OR REPLACE TRIGGER trg_warehouse_manager
AFTER INSERT ON  CHINHANH1.WAREHOUSE_MANAGER
FOR EACH ROW
DECLARE
    v_product_status NUMBER;
BEGIN
    -- Đặt giá trị cho v_product_status tùy thuộc vào điều kiện nào đó
    -- Trong ví dụ này, giả sử nếu QUANTITY > 0 thì PRODUCT_STATUS = 1, ngược lại PRODUCT_STATUS = 0
    IF :NEW.QUANTITY > 0 THEN
        v_product_status := 1;
    ELSE
        v_product_status := 0;
    END IF;

    INSERT INTO  CHINHANH1.WAREHOUSE_SALER VALUES (:NEW.BRANCH_ID, :NEW.PRODUCT_ID, v_product_status);
END;
/
CREATE OR REPLACE TRIGGER UPDATE_TOTAL_PRICE
BEFORE INSERT OR UPDATE OR DELETE ON CHINHANH1.ORDER_DETAILS
FOR EACH ROW
DECLARE
    v_total_price NUMBER;
BEGIN
    -- Tính tổng tiền cho order hiện tại
    SELECT NVL(SUM(QUANTITY * PRICE), 0) INTO v_total_price
    FROM CHINHANH1.ORDER_DETAILS
    WHERE ORDER_ID = :NEW.ORDER_ID;

    SELECT NVL(SUM(QUANTITY * PRICE), 0) INTO old_v_total_price
    FROM CHINHANH1.ORDER_DETAILS
    WHERE ORDER_ID = :OLD.ORDER_ID;

    -- Cập nhật tổng tiền vào bảng ORDERS
    IF INSERTING THEN
        UPDATE CHINHANH1.ORDERS
        SET TOTAL_PRICE = v_total_price + :NEW.PRICE* :NEW.QUANTITY
        WHERE ORDER_ID = :NEW.ORDER_ID;
    ELSIF UPDATING THEN
        UPDATE CHINHANH1.ORDERS
        SET TOTAL_PRICE = v_total_price + :NEW.PRICE*:NEW.QUANTITY
        WHERE ORDER_ID = :NEW.ORDER_ID;

        UPDATE CHINHANH1.ORDERS
        SET TOTAL_PRICE = old_v_total_price - :OLD.PRICE* :OLD.QUANTITY
        WHERE ORDER_ID = :OLD.ORDER_ID;
    ELSE
        UPDATE CHINHANH1.ORDERS
        SET TOTAL_PRICE = v_total_price - :OLD.PRICE* :OLD.QUANTITY
        WHERE ORDER_ID = :NEW.ORDER_ID;
    END IF;
END;
/

--
CREATE OR REPLACE TRIGGER SET_PRICE_BEFORE_INSERT
BEFORE INSERT ON CHINHANH1.ORDER_DETAILS
FOR EACH ROW
BEGIN
    -- Lấy giá trị PRODUCT_PRICE từ bảng PRODUCTS
    SELECT PRODUCT_PRICE INTO :NEW.PRICE
    FROM CHINHANH1.PRODUCTS
    WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        -- Xử lý trường hợp không tìm thấy sản phẩm
        :NEW.PRICE := NULL;
END;
/

------------------- Insert data
INSERT INTO CHINHANH1.BRANCHES VALUES ('CN1', 'Chi nhanh 1', 'Hang Thuyen, Linh Trung, Thu Duc, TP Ho Chi Minh');
INSERT INTO CHINHANH1.BRANCHES VALUES ('CN2', 'Chi nhanh 2', 'Luong Dinh Cua, Dong Hoa, Di An, Binh Duong');

INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH101', 'Nguyen Van An', '0345215875', 'Nam', 'Quan 7, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH102', 'Tran Phuoc Thinh', '0315220145', 'Nam', 'Quan 2, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH103', 'Pham Thi Bao Anh', '091245111', 'Nu', 'Thu Duc, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH104', 'Tran Thi Kim Anh', '0321555124', 'Nu', 'Binh Thanh, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH105', 'Ha Van Hung', '0344845784', 'Nam', 'Quan 3, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH106', 'Bui Bao Bich', '035929791', 'Nu', 'Quan 2, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH107', 'Nguyen Thi Thuy', '036628823', 'Nu', 'Linh Trung, Thu Duc, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH108', 'Nguyen Van Thanh', '0358475477', 'Nam', 'Linh Xuan, Thu Duc, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH109', 'Nguyen Hai Tu', '0315781111', 'Nam', 'Quan 9, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH110', 'Huynh Thi Kieu Diem', '0358475479', 'Nu', 'Quan 7, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH111', 'Nguyen Thanh Huyen', '0358475478', 'Nam', 'Thanh pho Thu Duc, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH112', 'Le Van An', '0987654321', 'Nam', 'Quan 7, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH113', 'Tran Thi Mai', '0123456789', 'Nu', 'Quan 3, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH114', 'Hoang Minh Hieu', '0909090909', 'Nam', 'Quan 10, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH115', 'Pham Van Cuong', '0765432109', 'Nam', 'Quan 1, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH116', 'Nguyen Thi Thao', '0888888888', 'Nu', 'Quan Binh Thanh, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH117', 'Do Manh Tung', '0999999999', 'Nam', 'Quan 2, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH118', 'Trinh Ngoc Linh', '0876543210', 'Nu', 'Quan 4, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH119', 'Vo Van Long', '0111222333', 'Nam', 'Quan 9, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH120', 'Le Thi Thu Ha', '0333444555', 'Nu', 'Quan 5, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH121', 'Ngo Quang Trung', '0444555666', 'Nam', 'Quan 6, TP.HCM', 'CN1');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH201', 'Nguyen Thi Huong', '0901234567', 'Nu', '123 Duong Pham Ngu Lao, Quan 1, TP. Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH202', 'Tran Van Nam', '0987654321', 'Nam', '456 Duong so 6, Quan 2, TP. Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH203', 'Le Thi Mai', '0912345678', 'Nu', '789 Duong Nguyen Thi Minh Khai, Quan 3, TP Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH204', 'Pham Van Hoang', '0978765432', 'Nam', '987 Duong So 12B, Quan 4, TP Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH205', 'Nguyen Thi Lan Anh', '0901122334', 'Nu', '654 Duong Ly Thuong Kiet, Quan 5, TP. HCM', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH206', 'Vo Van Duc', '0988777666', 'Nam', '321 Duong So 1, Quan 6, TP Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH207', 'Do Thi Ngoc', '0911223344', 'Nu', '555 Khu do thi Phu My Hung, Quan 7, TP. Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH208', 'Nguyen Van Khanh', '0977888999', 'Nam', '888 Duong So 3, Quan 8, TP. Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH209', 'Tran Thi Hang', '0901122334', 'Nu', '777 Duong So 22, Quan 9, TP. Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH210', 'Le Van Hai', '0988777666', 'Nam', '666 Duong Su Van Hanh, Quan 10, Ha Noi', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH211', 'Pham Van An', '0909876543', 'Nam', '567 Duong Nguyen Van Cu, Quan 1, TP. Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH212', 'Nguyen Thi Ngoc Tram', '0987654321', 'Nu', '789 Duong Vo Van Tan, Quan 2, TP. Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH213', 'Le Van Long', '0912345678', 'Nam', '234 Duong Le Van Sy, Quan 3, TP Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH214', 'Tran Thi Minh Chau', '0978765432', 'Nu', '876 Duong Cach Mang Thang Tam, Quan 4, TP Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH215', 'Nguyen Van Duc', '0901122334', 'Nam', '543 Duong Nguyen Van Qua, Quan 5, TP. HCM', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH216', 'Vo Thi Kim Ngan', '0988777666', 'Nu', '987 Duong Nguyen Trai, Quan 6, TP Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH217', 'Tran Van Hung', '0911223344', 'Nam', '321 Duong Le Loi, Quan 7, TP. Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH218', 'Do Van Thanh', '0977888999', 'Nam', '555 Duong Nguyen Huu Tho, Quan 8, TP. Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH219', 'Nguyen Thi My Linh', '0901122334', 'Nu', '111 Duong Nguyen Dinh Chieu, Quan 9, TP. Ho Chi Minh', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH220', 'Le Van Hien', '0988777666', 'Nam', '222 Duong Tran Hung Dao, Quan 10, Ha Noi', 'CN2');
INSERT INTO CHINHANH1.CUSTOMERS VALUES ('KH221', 'Pham Thi Thuy', '0909876543', 'Nu', '333 Duong Nguyen Trai, Quan 1, TP. Ho Chi Minh', 'CN2');

INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV101', 'Le Minh Chanh', '0345215875', TO_DATE('05-10-2003', 'DD-MM-YYYY'),'Nam', 'Di An, Binh Duong', 30000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV102', 'Tran Van Huynh Phuong', '0987654321', TO_DATE('15-05-1985', 'DD-MM-YYYY'),'Nam', 'Quan 1, TP.HCM', 10000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV103', 'Nguyen Thị Thuy Hien', '0912345678', TO_DATE('20-11-1992', 'DD-MM-YYYY'),'Nu', 'Quan 2, TP.HCM', 5000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV104', 'Pham Thanh Cong', '0123456789', TO_DATE('08-03-1988', 'DD-MM-YYYY'),'Nam', 'Quan 3, TP.HCM', 20000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV105', 'Dao Huy Hoang', '0978765432', TO_DATE('10-07-1995', 'DD-MM-YYYY'),'Nam', 'Quan 4, TP.HCM', 15000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV106', 'Van Thi Thuy Hang', '0901122334', TO_DATE('12-12-1990', 'DD-MM-YYYY'),'Nu', 'Quan 5, TP.HCM', 8000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV107', 'Nguyen Van Khanh', '0988777666', TO_DATE('01-01-1991', 'DD-MM-YYYY'),'Nam', 'Quan 6, TP.HCM', 9000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV108', 'Nguyen Thi Hang Nga', '0911223344', TO_DATE('02-02-1992', 'DD-MM-YYYY'),'Nu', 'Quan 7, TP.HCM', 11000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV109', 'Le Van Hai', '0988777666', TO_DATE('03-03-1993', 'DD-MM-YYYY'),'Nam', 'Quan 8, TP.HCM', 11000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV110', 'Nguyen Thi Huong Giang', '0901122334', TO_DATE('04-04-1994', 'DD-MM-YYYY'),'Nu', 'Quan 9, TP.HCM', 12000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV111', 'Vo Van Duc Thinh', '0988777666', TO_DATE('05-05-1995', 'DD-MM-YYYY'),'Nam', 'Quan 10, TP.HCM', 7000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV112', 'Do Thi Ngoc Tram', '0911223344', TO_DATE('06-06-1996', 'DD-MM-YYYY'),'Nu', 'Quan 11, TP.HCM', 7100000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV113', 'Tran Van Hoai', '0987654321', TO_DATE('15-03-1987', 'DD-MM-YYYY'), 'Nam', 'Quan 1, TP.HCM', 13000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV114', 'Le Thi My Linh', '0912345678', TO_DATE('20-09-1993', 'DD-MM-YYYY'), 'Nu', 'Quan 2, TP.HCM', 9000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV115', 'Pham Van Anh', '0123456789', TO_DATE('08-11-1985', 'DD-MM-YYYY'), 'Nam', 'Quan 3, TP.HCM', 18000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV116', 'Nguyen Van Thanh', '0978765432', TO_DATE('10-10-1990', 'DD-MM-YYYY'), 'Nam', 'Quan 4, TP.HCM', 16000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV117', 'Tran Thi Nga', '0901122334', TO_DATE('12-05-1988', 'DD-MM-YYYY'), 'Nu', 'Quan 5, TP.HCM', 11000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV118', 'Vo Van Hung', '0988777666', TO_DATE('01-07-1995', 'DD-MM-YYYY'), 'Nam', 'Quan 6, TP.HCM', 9500000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV119', 'Nguyen Thi Thu Ha', '0911223344', TO_DATE('02-09-1992', 'DD-MM-YYYY'), 'Nu', 'Quan 7, TP.HCM', 12000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV120', 'Le Van Phuc', '0988777666', TO_DATE('03-11-1993', 'DD-MM-YYYY'), 'Nam', 'Quan 8, TP.HCM', 13000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV121', 'Nguyen Van Hau', '0901122334', TO_DATE('04-06-1994', 'DD-MM-YYYY'), 'Nam', 'Quan 9, TP.HCM', 14000000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV122', 'Tran Thi Kim Anh', '0988777666', TO_DATE('05-02-1996', 'DD-MM-YYYY'), 'Nu', 'Quan 10, TP.HCM', 7800000, 'CN1');
INSERT INTO CHINHANH1.EMPLOYEES VALUES ('NV123', 'Do Van Thanh', '0911223344', TO_DATE('06-08-1997', 'DD-MM-YYYY'), 'Nam', 'Quan 11, TP.HCM', 7900000, 'CN1');


INSERT INTO CHINHANH1.PRODUCTS VALUES ('P1',  'Tivi LED 4K 55 inch', 12000000, 'Tivi LED 4K 55 inch, Smart TV', 'Tivi', 24);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P2',  'May Lanh Inverter 1.5HP', 8500000, 'May lanh Inverter cong nghe moi', 'Dien lanh', 36);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P3',  'Tu Lanh Side by Side', 18000000, 'Tu lanh Side by Side, dung tich 600L', 'Dien lanh', 24);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P4',  'May Giat Front Load 8kg', 9500000, 'May giat cong suat lon, tiet kiem nang luong', 'Gia dung', 12);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P5',  'Bep Dien Tu 2 Bep', 3500000, 'Bep dien tu 2 bep, chong trao nguoc', 'Bep', 18);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P6',  'Quat Dien Cot', 800000, 'Quat cot, 3 toc do', 'Dien gia dung', 12);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P7',  'May Xay Ca Phe', 1200000, 'May xay ca phe chuyen nghiep', 'Pha ca phe', 12);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P8',  'Lo Nuong Dien 32L', 2800000, 'Lo nuong dien dung tich lon', 'Bep', 24);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P9',  'May Hut Bui Robot', 3500000, 'May hut bui tu dong, thong minh', 'Dien gia dung', 12);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P10', 'May Pha Ca Phe Espresso', 5500000, 'May pha ca phe espresso chuyen nghiep', 'Pha ca phe', 18);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P11', 'Dieu Hoa Inverter 2HP', 10500000, 'Dieu hoa Inverter cong nghe moi', 'Dien lanh', 36);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P12', 'Binh Dun Nuoc Sieu Toc', 350000, 'Binh dun nuoc sieu toc, tu dong tat khi soi', 'Dien gia dung', 12);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P13', 'May Ep Trai Cay', 2200000, 'May ep trai cay chat luong cao', 'Dien gia dung', 12);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P14', 'Tu Say Quan Ao', 2000000, 'Tu say quan ao, cong nghe lam kho nhanh', 'Dien gia dung', 24);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P15', 'Ban La Hoi Nuoc', 1200000, 'Ban la hoi nuoc chat luong cao', 'Gia dung', 12);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P16', 'Den LED Trang Tri', 500000, 'Den LED trang tri nhieu mau sac', 'Den', 12);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P17', 'Loa Bluetooth Di Dong', 800000, 'Loa Bluetooth di dong, am thanh song dong', 'Am thanh', 12);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P18', 'May Say Toc Ion', 450000, 'May say toc ion, bao ve toc khoi hu ton', 'Dien gia dung', 12);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P19', 'O Cam Dien Thong Minh', 250000, 'O cam dien thong minh, dieu khien tu xa', 'Dien gia dung', 12);
INSERT INTO CHINHANH1.PRODUCTS VALUES ('P20', 'Quat Dung Cao Cap', 1200000, 'Quat dung cao cap, che do gio tu nhien', 'Dien gia dung', 24);

INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P1' , TO_DATE('15-01-2023', 'DD-MM-YYYY'), 500, TO_DATE('01-01-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P2' , TO_DATE('20-02-2023', 'DD-MM-YYYY'), 300, TO_DATE('01-02-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P3' , TO_DATE('10-03-2023', 'DD-MM-YYYY'), 0, TO_DATE('01-03-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P4' , TO_DATE('05-04-2023', 'DD-MM-YYYY'), 250, TO_DATE('01-04-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P5' , TO_DATE('12-05-2023', 'DD-MM-YYYY'), 600, TO_DATE('01-05-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P6' , TO_DATE('18-06-2023', 'DD-MM-YYYY'), 350, TO_DATE('01-06-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P7' , TO_DATE('01-07-2023', 'DD-MM-YYYY'), 450, TO_DATE('01-07-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P8' , TO_DATE('14-08-2023', 'DD-MM-YYYY'), 0, TO_DATE('01-08-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P9' , TO_DATE('30-09-2023', 'DD-MM-YYYY'), 550, TO_DATE('01-09-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P10' , TO_DATE('22-10-2023', 'DD-MM-YYYY'), 280, TO_DATE('01-10-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P11' , TO_DATE('17-11-2023', 'DD-MM-YYYY'), 380, TO_DATE('01-11-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P12' , TO_DATE('05-12-2023', 'DD-MM-YYYY'), 420, TO_DATE('01-12-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P13' , TO_DATE('08-01-2023', 'DD-MM-YYYY'), 330, TO_DATE('01-01-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P14' , TO_DATE('14-02-2023', 'DD-MM-YYYY'), 480, TO_DATE('01-02-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P15' , TO_DATE('19-03-2023', 'DD-MM-YYYY'), 0, TO_DATE('01-03-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P16' , TO_DATE('25-04-2023', 'DD-MM-YYYY'), 370, TO_DATE('01-04-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P17' , TO_DATE('30-05-2023', 'DD-MM-YYYY'), 500, TO_DATE('01-05-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P18' , TO_DATE('10-06-2023', 'DD-MM-YYYY'), 26, TO_DATE('01-06-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P19' , TO_DATE('15-07-2023', 'DD-MM-YYYY'), 43, TO_DATE('01-07-2022', 'DD-MM-YYYY'));
INSERT INTO  CHINHANH1.WAREHOUSE_MANAGER VALUES ('CN1','P20' , TO_DATE('20-08-2023', 'DD-MM-YYYY'), 29, TO_DATE('01-08-2022', 'DD-MM-YYYY'));

-- Dữ liệu cho bảng CHINHANH1.ORDERS
INSERT INTO  CHINHANH1.ORDERS VALUES (1, 'KH101', TO_DATE('01-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV101', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (2, 'KH102', TO_DATE('02-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV102', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (3, 'KH103', TO_DATE('03-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV103', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (4, 'KH104', TO_DATE('04-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV104', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (5, 'KH105', TO_DATE('05-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV105', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (6, 'KH106', TO_DATE('06-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV106', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (7, 'KH107', TO_DATE('20-10-2023', 'DD-MM-YYYY'), 'CN1', 'NV107', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (8, 'KH108', TO_DATE('08-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV108', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (9, 'KH109', TO_DATE('09-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV109', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (10,'KH110', TO_DATE('10-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV110', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (11, 'KH111', TO_DATE('11-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV111', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (12, 'KH216', TO_DATE('12-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV112', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (13, 'KH110', TO_DATE('13-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV113', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (14, 'KH110', TO_DATE('14-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV114', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (15, 'KH110', TO_DATE('15-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV115', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (16, 'KH112', TO_DATE('16-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV116', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (17, 'KH117', TO_DATE('17-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV117', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (18, 'KH118', TO_DATE('18-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV118', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (19, 'KH119', TO_DATE('19-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV119', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (20, 'KH113', TO_DATE('20-10-2023', 'DD-MM-YYYY'), 'CN1', 'NV120', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (21, 'KH214', TO_DATE('21-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV121', 0);
INSERT INTO  CHINHANH1.ORDERS VALUES (22, 'KH206', TO_DATE('22-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV122', 0);

-- Dữ liệu cho bảng CHINHANH1.ORDER_DETAILS
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (1, 'P1', 5, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (1, 'P2', 3, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (2, 'P3', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (2, 'P4', 4, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (3, 'P5', 6, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (3, 'P6', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (4, 'P7', 3, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (4, 'P8', 1, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (5, 'P9', 5, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (5, 'P10', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (6, 'P11', 4, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (6, 'P12', 3, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (7, 'P8', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (7, 'P14', 5, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (8, 'P15', 3, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (8, 'P16', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (9, 'P17', 4, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (9, 'P18', 3, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (10, 'P18', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (10, 'P18', 5, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (11, 'P1', 3, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (11, 'P2', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (12, 'P3', 4, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (12, 'P4', 1, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (13, 'P5', 5, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (13, 'P6', 3, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (14, 'P7', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (14, 'P8', 4, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (15, 'P9', 1, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (15, 'P10', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (16, 'P11', 3, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (16, 'P12', 4, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (17, 'P13', 5, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (17, 'P14', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (18, 'P15', 3, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (18, 'P16', 1, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (19, 'P17', 4, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (19, 'P18', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (20, 'P3', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (20, 'P1', 2, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (21, 'P1', 1, 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (22, 'P1', 1, 0);

------------------- Create user
CREATE USER DIRECTOR IDENTIFIED BY DIRECTOR;
GRANT CONNECT, CREATE PUBLIC DATABASE LINK TO DIRECTOR;
GRANT SELECT, INSERT, UPDATE, DELETE ON CHINHANH1.BRANCHES TO DIRECTOR;
GRANT SELECT, INSERT, UPDATE, DELETE ON CHINHANH1.PRODUCTS TO DIRECTOR;
GRANT SELECT, INSERT, UPDATE, DELETE ON CHINHANH1.CUSTOMERS TO DIRECTOR;
GRANT SELECT, INSERT, UPDATE, DELETE ON CHINHANH1.EMPLOYEES TO DIRECTOR;
GRANT SELECT ON CHINHANH1.ORDERS TO DIRECTOR;
GRANT SELECT ON CHINHANH1.ORDER_DETAILS TO DIRECTOR;
GRANT SELECT, INSERT, UPDATE, DELETE ON CHINHANH1.WAREHOUSE_MANAGER TO DIRECTOR;
GRANT SELECT, INSERT, UPDATE, DELETE ON CHINHANH1.WAREHOUSE_SALER TO DIRECTOR;

CREATE USER WAREHOUSE_MANAGER IDENTIFIED BY WAREHOUSE_MANAGER;
GRANT CONNECT TO WAREHOUSE_MANAGER;
GRANT SELECT ON CHINHANH1.BRANCHES TO WAREHOUSE_MANAGER;
GRANT SELECT, INSERT, UPDATE ON CHINHANH1.PRODUCTS TO WAREHOUSE_MANAGER;
GRANT SELECT, INSERT, UPDATE, DELETE ON CHINHANH1.WAREHOUSE_MANAGER TO WAREHOUSE_MANAGER;
GRANT SELECT, INSERT, UPDATE, DELETE ON CHINHANH1.WAREHOUSE_SALER TO WAREHOUSE_MANAGER;

CREATE USER EMPLOYEE IDENTIFIED BY EMPLOYEE;
GRANT CONNECT TO EMPLOYEE;
GRANT SELECT ON CHINHANH1.BRANCHES TO EMPLOYEE;
GRANT SELECT ON CHINHANH1.PRODUCTS TO EMPLOYEE;
GRANT SELECT ON CHINHANH1.CUSTOMERS TO EMPLOYEE;
GRANT SELECT ON CHINHANH1.ORDERS TO EMPLOYEE;
GRANT SELECT ON CHINHANH1.ORDER_DETAILS TO EMPLOYEE;
GRANT SELECT ON CHINHANH1.WAREHOUSE_SALER TO EMPLOYEE;

------------------- Create database link by SERVICE_NAME:       CHINHANH_01_02
CREATE DATABASE LINK DIRECTOR_LINK CONNECT TO DIRECTOR IDENTIFIED BY DIRECTOR USING 'CHINHANH_01_02';
CREATE DATABASE LINK WAREHOUSE_MANAGER_LINK CONNECT TO WAREHOUSE_MANAGER IDENTIFIED BY WAREHOUSE_MANAGER USING 'CHINHANH_01_02';
CREATE DATABASE LINK EMPLOYEE_LINK CONNECT TO EMPLOYEE IDENTIFIED BY EMPLOYEE USING 'CHINHANH_01_02';



------------------- Other command

SELECT * FROM CHINHANH1.CUSTOMERS;
SELECT * FROM CHINHANH1.EMPLOYEES;
SELECT * FROM CHINHANH1.BRANCHES;
SELECT * FROM CHINHANH1.ORDERS;
SELECT * FROM CHINHANH1.ORDER_DETAILS;
SELECT * FROM CHINHANH1.PRODUCTS;
SELECT * FROM CHINHANH1.WAREHOUSE_MANAGER;
SELECT * FROM CHINHANH1.WAREHOUSE_SALER;

DROP TABLE CHINHANH1.WAREHOUSE_MANAGER CASCADE CONSTRAINTS;
DROP TABLE CHINHANH1.WAREHOUSE_SALER CASCADE CONSTRAINTS;
DROP TABLE CHINHANH1.ORDER_DETAILS CASCADE CONSTRAINTS;
DROP TABLE CHINHANH1.ORDERS CASCADE CONSTRAINTS;
DROP TABLE CHINHANH1.EMPLOYEES CASCADE CONSTRAINTS;
DROP TABLE CHINHANH1.CUSTOMERS CASCADE CONSTRAINTS;
DROP TABLE CHINHANH1.PRODUCTS CASCADE CONSTRAINTS;
DROP TABLE CHINHANH1.BRANCHES CASCADE CONSTRAINTS;


--------------------- Query
-- Yêu cầu 1: Thực hiện 10 câu truy vấn nhiều dạng
    -- 1.1. Liệt kê danh sách các sản phẩm ở CN1 có khách hàng đặt hàng từ ngày 05/01/2023 đến nay và số lượng tồn kho > 0
        -- User : Employee
        -- Phạm vi: tại cửa hàng làm việc
SELECT DISTINCT P.PRODUCT_ID, P.PRODUCT_NAME, WM.QUANTITY, O.ORDER_DATE
FROM CHINHANH1.PRODUCTS P
INNER JOIN CHINHANH1.ORDER_DETAILS OD ON P.PRODUCT_ID = OD.PRODUCT_ID
INNER JOIN CHINHANH1.ORDERS O ON OD.ORDER_ID = O.ORDER_ID
INNER JOIN CHINHANH1.WAREHOUSE_MANAGER WM ON P.PRODUCT_ID = WM.PRODUCT_ID
WHERE O.ORDER_DATE >= TO_DATE('25-01-2023', 'DD-MM-YYYY') AND WM.QUANTITY > 0;

    -- 1.2. Cho biết thông tin sản phẩm(PID, PNAME, PRICE) có số lượng bán nhiều nhất và có giá bán lớn hơn 5000000
        -- User : Employee
        -- Phạm vi: tại cửa hàng làm việc
SELECT P.PRODUCT_ID, P.PRODUCT_NAME, P.PRODUCT_PRICE, SUM(OD.QUANTITY) AS TOTAL
FROM CHINHANH1.PRODUCTS P
INNER JOIN CHINHANH1.ORDER_DETAILS OD ON P.PRODUCT_ID = OD.PRODUCT_ID
GROUP BY P.PRODUCT_ID, P.PRODUCT_NAME, P.PRODUCT_PRICE
HAVING P.PRODUCT_PRICE > 5000000
ORDER BY TOTAL DESC;

    -- 1.3. In ra khách hàng có số lượng đơn hàng nhiều nhất 
        -- User : Warehouse Manager
        -- Phạm vi: tại cửa hàng làm việc
SELECT O.CUS_ID, C.CUS_NAME, COUNT(O.ORDER_ID) AS TOTAL
FROM CHINHANH1.ORDERS O
INNER JOIN CHINHANH1.CUSTOMERS C ON O.CUS_ID = C.CUS_ID
GROUP BY O.CUS_ID, C.CUS_NAME
ORDER BY TOTAL DESC;

    -- 1.4. Liệt kê sản phẩm được bán nhiều nhất ở 2 chi nhánh
    -- User : Director
    -- Phạm vi: toàn hệ thống
SELECT P.PRODUCT_ID, P.PRODUCT_NAME
FROM CHINHANH1.PRODUCTS P
INNER JOIN CHINHANH1.ORDER_DETAILS OD ON P.PRODUCT_ID = OD.PRODUCT_ID
GROUP BY P.PRODUCT_ID, P.PRODUCT_NAME
HAVING SUM(OD.QUANTITY) = (SELECT MAX(SUM(OD.QUANTITY)) FROM CHINHANH1.ORDER_DETAILS OD GROUP BY OD.PRODUCT_ID)
UNION ALL
SELECT P.PRODUCT_ID, P.PRODUCT_NAME
FROM CHINHANH2.PRODUCTS@DIRECTOR_LINK P
INNER JOIN CHINHANH2.ORDER_DETAILS@DIRECTOR_LINK OD ON P.PRODUCT_ID = OD.PRODUCT_ID
GROUP BY P.PRODUCT_ID, P.PRODUCT_NAME
HAVING SUM(OD.QUANTITY) = (SELECT MAX(SUM(OD.QUANTITY)) FROM CHINHANH2.ORDER_DETAILS@DIRECTOR_LINK OD GROUP BY OD.PRODUCT_ID);

    -- 1.5. Liệt kê danh sách khách hàng mua sản phẩm P1 ở cả 2 chi nhánh
    -- User : Employee
    -- Phạm vi: toàn hệ thống
SELECT O.CUS_ID
FROM CHINHANH1.ORDER_DETAILS OD
JOIN CHINHANH1.ORDERS O ON OD.ORDER_ID = O.ORDER_ID
WHERE OD.PRODUCT_ID = 'P1' AND O.BRANCH_ID = 'CN1'
INTERSECT 
SELECT O.CUS_ID 
FROM CHINHANH2.ORDER_DETAILS@EMPLOYEE_LINK OD
JOIN CHINHANH2.ORDERS@EMPLOYEE_LINK O ON OD.ORDER_ID = O.ORDER_ID
WHERE OD.PRODUCT_ID = 'P1' AND O.BRANCH_ID = 'CN2';

    -- 1.6. Liệt kê danh sách sản phẩm còn hàng ở chi nhánh 1 nhưng không còn hàng ở chi nhánh 2
    -- User : Warehouse Manager
    -- Phạm vi: toàn hệ thống
SELECT P.PRODUCT_ID, P.PRODUCT_NAME
FROM CHINHANH1.PRODUCTS P
INNER JOIN CHINHANH1.WAREHOUSE_MANAGER WM ON P.PRODUCT_ID = WM.PRODUCT_ID
WHERE WM.QUANTITY > 0
MINUS
SELECT P.PRODUCT_ID, P.PRODUCT_NAME
FROM CHINHANH2.PRODUCTS@WAREHOUSE_MANAGER_LINK P
INNER JOIN CHINHANH2.WAREHOUSE_MANAGER@WAREHOUSE_MANAGER_LINK WM ON P.PRODUCT_ID = WM.PRODUCT_ID
WHERE WM.QUANTITY > 0;

    -- 1.7. Tìm khách hàng có giới tính nữ đã mua tất cả sản phẩm có giá trên 12.000.000VNĐ vào ngày 20/10
    -- User : Employee
    -- Phạm vi: tại cửa hàng làm việc
SELECT DISTINCT C.CUS_ID, C.CUS_NAME
FROM CHINHANH1.CUSTOMERS C
WHERE C.CUS_GENDER = 'Nu'
  AND NOT EXISTS (
    SELECT *
    FROM CHINHANH1.PRODUCTS P
    WHERE P.PRODUCT_PRICE >= 12000000
      AND NOT EXISTS (
        SELECT *
        FROM CHINHANH1.ORDER_DETAILS OD
        JOIN CHINHANH1.ORDERS O ON OD.ORDER_ID = O.ORDER_ID
        WHERE O.CUS_ID = C.CUS_ID
          AND OD.PRODUCT_ID = P.PRODUCT_ID
          AND TO_CHAR(O.ORDER_DATE, 'DD-MM') = '20-10'
      )
  );

    -- 1.8. In ra danh sách số lượng nhân viên của 2 chi nhánh
        -- User : DIRECTOR
        -- Phạm vi: toàn hệ thống
SELECT E1.BRANCH_ID AS MaCN, COUNT(E1.EMP_ID) AS SoLuongNhanVien
FROM  CHINHANH1.EMPLOYEES E1
WHERE E1.BRANCH_ID = 'CN1'
GROUP BY E1.BRANCH_ID
UNION ALL
SELECT E2.BRANCH_ID AS MaCN, COUNT(E2.EMP_ID) AS SoLuongNhanVien
FROM CHINHANH2.EMPLOYEES@DIRECTOR_LINK E2
WHERE E2.BRANCH_ID = 'CN2'
GROUP BY E2.BRANCH_ID;

    -- 1.9. In ra danh sách top 3 mã sản phẩm có số lượng tồn kho nhiều nhất cả 2 chi nhánh
        -- User: Warehourse Manager
        -- Phạm vi: tại cửa hàng làm việc
SELECT PRODUCT_ID, PRODUCT_NAME, SUM(TOTAL_QUANTITY) AS TOTAL_QUANTITY
FROM (
    (SELECT WM.PRODUCT_ID, PRODUCT_NAME, SUM(WM.QUANTITY) AS TOTAL_QUANTITY
    FROM CHINHANH1.WAREHOUSE_MANAGER WM
    INNER JOIN CHINHANH1.PRODUCTS P ON WM.PRODUCT_ID = P.PRODUCT_ID
    GROUP BY WM.PRODUCT_ID, PRODUCT_NAME
    HAVING SUM(WM.QUANTITY) > 0
    ORDER BY WM.PRODUCT_ID 
    FETCH FIRST 3 ROWS ONLY)
    UNION ALL
    (SELECT WM.PRODUCT_ID, PRODUCT_NAME, SUM(WM.QUANTITY) AS TOTAL_QUANTITY
    FROM CHINHANH2.WAREHOUSE_MANAGER@WAREHOUSE_MANAGER_LINK WM
    INNER JOIN CHINHANH2.PRODUCTS@WAREHOUSE_MANAGER_LINK P ON WM.PRODUCT_ID = P.PRODUCT_ID
    GROUP BY WM.PRODUCT_ID, PRODUCT_NAME
    HAVING SUM(WM.QUANTITY) > 0
    ORDER BY WM.PRODUCT_ID
    FETCH FIRST 3 ROWS ONLY)
)
GROUP BY PRODUCT_ID, PRODUCT_NAME
ORDER BY TOTAL_QUANTITY DESC
FETCH FIRST 3 ROWS ONLY;

    -- 1.10. Tính tổng doanh thu của 2 chi nhánh
    -- User: DIRECTOR
    -- Phạm vi: toàn hệ thống
SELECT O.BRANCH_ID, SUM(O.TOTAL_PRICE) AS TOTAL_PRICE
FROM CHINHANH1.ORDERS O 
GROUP BY O.BRANCH_ID
UNION ALL
SELECT O.BRANCH_ID, SUM(O.TOTAL_PRICE) AS TOTAL_PRICE
FROM CHINHANH2.ORDERS@DIRECTOR_LINK O
GROUP BY O.BRANCH_ID;

-- Yêu cầu 2: Viết hàm, thủ tục, ràng buộc toàn vẹn truy vấn trên môi trường phân tán mức độ phức tạp nhiều xử lý (lỗi tạo)
    -- 2.1. Procedure / Function
    -- Giám đốc có thể thay đổi lương của nhân viên
SET serveroutput on;
CREATE OR REPLACE PROCEDURE changeEmployeeSalary (empID CHINHANH1.EMPLOYEES.EMP_ID%TYPE, sal NUMBER) AS
  dem NUMBER;
BEGIN
  SELECT COUNT(*) INTO dem
  FROM CHINHANH1.EMPLOYEES Emp1
  WHERE Emp1.EMP_ID = empID;

  IF (dem > 0) THEN
    UPDATE CHINHANH1.EMPLOYEES Emp1
    SET Emp1.EMP_SALARY = sal
    WHERE Emp1.EMP_ID = empID;

  ELSE
    SELECT COUNT(*) INTO dem
    FROM CHINHANH2.EMPLOYEES@DIRECTOR_LINK Emp2
    WHERE Emp2.EMP_ID = empID;

    IF (dem > 0) THEN
      UPDATE CHINHANH2.EMPLOYEES@DIRECTOR_LINK Emp2
      SET EMP_SALARY = sal
      WHERE emp2.EMP_ID = empID;
    ELSE
      DBMS_OUTPUT.PUT_LINE('Employee not found in any branch.');
    END IF;
  END IF;
  COMMIT;
END;
/
SELECT E.EMP_ID, E.EMP_NAME, E.EMP_SALARY FROM CHINHANH1.EMPLOYEES E WHERE E.EMP_ID = 'NV110';
/
EXECUTE changeEmployeeSalary('NV110', 1000000); 
/
SELECT E.EMP_ID, E.EMP_NAME, E.EMP_SALARY FROM CHINHANH1.EMPLOYEES E WHERE E.EMP_ID = 'NV110';

    -- 2.2. Trigger - DB có sử dụng 3 trigger nhưng chỉ trình bày 1 trigger
    -- Khi sản phẩm trong kho hàng ở chi nhánh này hết thì sẽ lấy sản phẩm ở chi nhánh còn lại
    -- Insert
SET SERVEROUTPUT ON
CREATE OR REPLACE TRIGGER INSERT_UPDATE_WAREHOUSE
BEFORE INSERT ON CHINHANH1.ORDER_DETAILS
FOR EACH ROW
DECLARE
    QUANTITY_BRANCH_1 NUMBER;
    QUANTITY_BRANCH_2 NUMBER;
    MISSING_PRODUCT NUMBER;
BEGIN 
    SELECT QUANTITY INTO QUANTITY_BRANCH_1
    FROM CHINHANH1.WAREHOUSE_MANAGER
    WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    SELECT QUANTITY INTO QUANTITY_BRANCH_2
    FROM CHINHANH2.WAREHOUSE_MANAGER@WAREHOUSE_MANAGER_LINK
    WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    IF(:NEW.QUANTITY - QUANTITY_BRANCH_1 <= 0)THEN
        UPDATE CHINHANH1.WAREHOUSE_MANAGER
        SET QUANTITY = QUANTITY_BRANCH_1 - :NEW.QUANTITY
        WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    ELSIF (:NEW.QUANTITY - QUANTITY_BRANCH_1 > 0) THEN
        MISSING_PRODUCT := :NEW.QUANTITY - QUANTITY_BRANCH_1;       
        IF (QUANTITY_BRANCH_2 > MISSING_PRODUCT) THEN
            UPDATE CHINHANH2.WAREHOUSE_MANAGER@WAREHOUSE_MANAGER_LINK
            SET QUANTITY = QUANTITY_BRANCH_2 - MISSING_PRODUCT
            WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
            UPDATE CHINHANH1.WAREHOUSE_MANAGER
            SET QUANTITY = 0
            WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
        ELSIF (QUANTITY_BRANCH_2 = MISSING_PRODUCT) THEN
            UPDATE CHINHANH2.WAREHOUSE_MANAGER@WAREHOUSE_MANAGER_LINK
            SET QUANTITY = 0
            WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
            UPDATE CHINHANH1.WAREHOUSE_MANAGER
            SET QUANTITY = 0
            WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
        ELSIF (QUANTITY_BRANCH_2 < MISSING_PRODUCT) THEN
            RAISE_APPLICATION_ERROR(-20001, 'ERROR');
        END IF;
    END IF;
END;
/
--THUC THI TRIGGER
INSERT INTO  CHINHANH1.ORDERS VALUES (24, 'KH206', TO_DATE('22-01-2023', 'DD-MM-YYYY'), 'CN1', 'NV122', 0);
INSERT INTO  CHINHANH1.ORDER_DETAILS VALUES (24, 'P18', 27, 0);
 
-- KET QUA P18 = 0 (CN1) & P18 = 259 (CN2) 
SELECT * FROM CHINHANH1.WAREHOUSE_MANAGER
SELECT * FROM CHINHANH2.WAREHOUSE_MANAGER@WAREHOUSE_MANAGER_LINK

    --Update
CREATE OR REPLACE TRIGGER UPDATE_UPDATE_WAREHOUSE
BEFORE UPDATE ON CHINHANH1.ORDER_DETAILS
FOR EACH ROW
DECLARE
    CHANGED_QUANTITY NUMBER;
    QUANTITY_BRANCH_1 NUMBER;
    MISSING_PRODUCT NUMBER;
    QUANTITY_BRANCH_2 NUMBER;
BEGIN
    SELECT QUANTITY
    INTO QUANTITY_BRANCH_1
    FROM CHINHANH1.WAREHOUSE_MANAGER
    WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
 
    SELECT QUANTITY
    INTO QUANTITY_BRANCH_2
    FROM CHINHANH2.WAREHOUSE_MANAGER@WAREHOUSE_MANAGER_LINK
    WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
 
    CHANGED_QUANTITY := :NEW.QUANTITY - :OLD.QUANTITY;
 
    IF CHANGED_QUANTITY > 0 THEN
        IF CHANGED_QUANTITY - QUANTITY_BRANCH_1 <= 0 THEN
            UPDATE CHINHANH1.WAREHOUSE_MANAGER
            SET QUANTITY = QUANTITY_BRANCH_1 - CHANGED_QUANTITY
            WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
        ELSIF CHANGED_QUANTITY - QUANTITY_BRANCH_1 > 0 THEN
            MISSING_PRODUCT := CHANGED_QUANTITY - QUANTITY_BRANCH_1;
            IF QUANTITY_BRANCH_2 > MISSING_PRODUCT THEN
                UPDATE CHINHANH2.WAREHOUSE_MANAGER@WAREHOUSE_MANAGER_LINK
                SET QUANTITY = QUANTITY_BRANCH_2 - MISSING_PRODUCT
                WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
                UPDATE CHINHANH1.WAREHOUSE_MANAGER
                SET QUANTITY = 0
                WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
            ELSIF QUANTITY_BRANCH_2 = MISSING_PRODUCT THEN
                UPDATE CHINHANH2.WAREHOUSE_MANAGER@WAREHOUSE_MANAGER_LINK
                SET QUANTITY = 0
                WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
                UPDATE CHINHANH1.WAREHOUSE_MANAGER
                SET QUANTITY = 0
                WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
            ELSIF QUANTITY_BRANCH_2 < MISSING_PRODUCT THEN
                RAISE_APPLICATION_ERROR(-20001, 'ERROR');
            END IF;
        ELSE
            UPDATE CHINHANH1.WAREHOUSE_MANAGER
            SET QUANTITY = QUANTITY_BRANCH_1 - :OLD.QUANTITY
            WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
        END IF;
    END IF;
END;
/

-- Yêu cầu 3: Demo các mức cô lập (ISOLATION LEVEL) trong môi trường phân tán và hướng giải quyết 
    -- Trong file báo cáo

-- Yêu cầu 4: Thực hiện tối ưu hóa truy vấn trên môi trường phân tán 1 câu truy vấn đơn giản
    -- 4.1. Đề xuất 
SELECT 	DISTINCT P.PRODUCT_ID, PRODUCT_NAME, PRODUCT_STATUS
FROM 	CHINHANH1.PRODUCTS P, CHINHANH1.WAREHOUSE_SALER WS, CHINHANH1.ORDERS O, CHINHANH1.ORDER_DETAILS OD, CHINHANH1.BRANCHES B
WHERE 	B.BRANCH_ID = WS.BRANCH_ID
AND		WS.PRODUCT_ID = P.PRODUCT_ID
AND		P.PRODUCT_ID = OD.PRODUCT_ID
AND		OD.ORDER_ID = O.ORDER_ID
AND		B.BRANCH_NAME = 'Chi nhanh 1'
AND 		EXTRACT (YEAR FROM ORDER_DATE) = 2023
AND 		EXTRACT (MONTH FROM ORDER_DATE) = 10
AND 		QUANTITY > 2;

    -- 4.2. Explain
SELECT 	/*+ GATHER_PLAN_STATISTICS*/ DISTINCT
    P.PRODUCT_ID, PRODUCT_NAME, PRODUCT_STATUS
FROM CHINHANH1.PRODUCTS P, CHINHANH1.WAREHOUSE_SALER WS, CHINHANH1.ORDERS O, CHINHANH1.ORDER_DETAILS OD, CHINHANH1.BRANCHES B
WHERE 	B.BRANCH_ID = WS.BRANCH_ID
AND		WS.PRODUCT_ID = P.PRODUCT_ID
AND		P.PRODUCT_ID = OD.PRODUCT_ID
AND		OD.ORDER_ID = O.ORDER_ID
AND		B.BRANCH_NAME = 'Chi nhanh 1'
AND 		EXTRACT (YEAR FROM ORDER_DATE) = 2023
AND 		EXTRACT (MONTH FROM ORDER_DATE) = 10
AND 		QUANTITY > 2;
SELECT		*
FROM		TABLE (DBMS_XPLAN.display_cursor (format =>'ALLSTATS LAST'));

    -- 4.3. Tối ưu tên môi trường phân tán
SELECT DISTINCT PRODUCT_ID, PRODUCT_NAME,PRODUCT_STATUS
FROM
    ((
        SELECT BRANCH_ID, E.PRODUCT_ID, PRODUCT_NAME, PRODUCT_STATUS
        FROM
            ((
                SELECT C.PRODUCT_ID, PRODUCT_NAME
                FROM
                    ((
                        SELECT PRODUCT_ID
                        FROM
                            ((
                                SELECT ORDER_ID
                                FROM CHINHANH1.ORDERS
                                WHERE EXTRACT (YEAR FROM ORDER_DATE) = 2023
                                    AND EXTRACT (MONTH FROM ORDER_DATE) = 10
                            ) A INNER JOIN (
                                SELECT ORDER_ID,PRODUCT_ID
                                FROM CHINHANH1.ORDER_DETAILS
                                WHERE QUANTITY > 2
                            ) B ON A.ORDER_ID = B.ORDER_ID)
                    ) C INNER JOIN (
                        SELECT PRODUCT_ID,PRODUCT_NAME
                        FROM CHINHANH1.PRODUCTS
                    ) D ON C.PRODUCT_ID = D.PRODUCT_ID)
            ) E INNER JOIN (
                SELECT BRANCH_ID, PRODUCT_ID, PRODUCT_STATUS
                FROM CHINHANH1.WAREHOUSE_SALER
            ) F ON E.PRODUCT_ID = F.PRODUCT_ID)
    ) G INNER JOIN (
        SELECT BRANCH_ID
        FROM CHINHANH1.BRANCHES
        WHERE BRANCH_NAME = 'Chi nhanh 1'
    ) H ON G.BRANCH_ID = H.BRANCH_ID)
;

    -- 4.4. Explain trên môi trường phân tán
SELECT /*+ GATHER_PLAN_STATISTICS */ 
    DISTINCT PRODUCT_ID, PRODUCT_NAME, PRODUCT_STATUS
FROM
    ((
        SELECT BRANCH_ID, E.PRODUCT_ID, PRODUCT_NAME, PRODUCT_STATUS
        FROM
            ((
                SELECT C.PRODUCT_ID, PRODUCT_NAME
                FROM
                    ((
                        SELECT PRODUCT_ID
                        FROM
                            ((
                                SELECT ORDER_ID
                                FROM CHINHANH1.ORDERS
                                WHERE EXTRACT(YEAR FROM ORDER_DATE) = 2023
                                   AND EXTRACT(MONTH FROM ORDER_DATE) = 10
                            ) A INNER JOIN (
                                SELECT ORDER_ID, PRODUCT_ID
                                FROM CHINHANH1.ORDER_DETAILS
                                WHERE QUANTITY > 2
                            ) B ON A.ORDER_ID = B.ORDER_ID)
                    ) C INNER JOIN (
                        SELECT PRODUCT_ID, PRODUCT_NAME
                        FROM CHINHANH1.PRODUCTS
                    ) D ON C.PRODUCT_ID = D.PRODUCT_ID)
            ) E INNER JOIN (
                SELECT BRANCH_ID, PRODUCT_ID, PRODUCT_STATUS
                FROM CHINHANH1.WAREHOUSE_SALER
            ) F ON E.PRODUCT_ID = F.PRODUCT_ID)
    ) G INNER JOIN (
        SELECT BRANCH_ID
        FROM CHINHANH1.BRANCHES
        WHERE BRANCH_NAME = 'Chi nhanh 1'
    ) H ON G.BRANCH_ID = H.BRANCH_ID);
SELECT *
FROM TABLE(DBMS_XPLAN.display_cursor(format=>'ALLSTATS LAST'));


    --Yêu cầu 5: Các đặc điểm mới của Oracle 21c và ứng dụng phân tán trong đặc điểm mới (Option Bonus +2.00)
    --JSON trong Oracle 21c
    ALTER TABLE CHINHANH1.ORDERS ADD DETAILS JSON;

    UPDATE CHINHANH1.ORDERS O
    SET O.DETAILS = (
        SELECT JSON_ARRAYAGG(
            JSON_OBJECT(
                'PRODUCT_ID'       VALUE OD.PRODUCT_ID,
                'QUANTITY'         VALUE OD.QUANTITY,
                'PRICE'            VALUE OD.PRICE
            )
        )
        FROM CHINHANH1.ORDER_DETAILS OD
        WHERE OD.ORDER_ID = O.ORDER_ID
        GROUP BY OD.ORDER_ID
    );

    --Liệt kê sản phẩm bán chạy của 2 chi nhánh (Lmaf theo cách thường để so sánh kết quả)
    SELECT P.PRODUCT_ID, P.PRODUCT_NAME
    FROM CHINHANH1.PRODUCTS P
    INNER JOIN CHINHANH1.ORDER_DETAILS OD ON P.PRODUCT_ID = OD.PRODUCT_ID
    GROUP BY P.PRODUCT_ID, P.PRODUCT_NAME
    HAVING SUM(OD.QUANTITY) = (SELECT MAX(SUM(OD.QUANTITY)) 
                                FROM CHINHANH1.ORDER_DETAILS OD 
                                GROUP BY OD.PRODUCT_ID)
    UNION ALL
    SELECT P.PRODUCT_ID, P.PRODUCT_NAME FROM CHINHANH2.PRODUCTS@DIRECTOR_LINK P
    INNER JOIN CHINHANH2.ORDER_DETAILS@DIRECTOR_LINK OD 
    ON P.PRODUCT_ID = OD.PRODUCT_ID
    GROUP BY P.PRODUCT_ID, P.PRODUCT_NAME
    HAVING SUM(OD.QUANTITY) = (SELECT MAX(SUM(OD.QUANTITY)) 
                                FROM CHINHANH2.ORDER_DETAILS@DIRECTOR_LINK OD 
                                GROUP BY OD.PRODUCT_ID);